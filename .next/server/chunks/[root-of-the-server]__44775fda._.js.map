{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///D:/Documentos/Trae/autosheets%20backup%202/src/lib/sheets/service.ts"],"sourcesContent":["import { google } from 'googleapis';\r\nimport { BetData } from '../telegram/parser'; // Mudança aqui!\r\nimport { SHEETS_CONFIG } from '../security/config';\r\n\r\ninterface SheetsConfig {\r\n  spreadsheetId: string;\r\n  range: string;\r\n  credentials: {\r\n    client_email: string;\r\n    private_key: string;\r\n  };\r\n}\r\n\r\nclass GoogleSheetsService {\r\n  private sheets: any;\r\n  private auth: any;\r\n  private config: SheetsConfig;\r\n\r\n  constructor(config: SheetsConfig) {\r\n    this.config = config;\r\n    this.initializeAuth();\r\n  }\r\n\r\n  private async initializeAuth() {\r\n    try {\r\n      this.auth = new google.auth.GoogleAuth({\r\n        credentials: this.config.credentials,\r\n        scopes: ['https://www.googleapis.com/auth/spreadsheets'],\r\n      });\r\n\r\n      this.sheets = google.sheets({ version: 'v4', auth: this.auth });\r\n    } catch (error) {\r\n      console.error('Erro ao inicializar autenticação Google Sheets:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async addBetData(betData: BetData): Promise<boolean> {\r\n    try {\r\n      console.log('Dados recebidos para salvar:', betData);\r\n      \r\n      const values = this.formatBetDataForSheets(betData);\r\n      console.log('Valores formatados:', values);\r\n      \r\n      const request = {\r\n        spreadsheetId: this.config.spreadsheetId,\r\n        range: this.config.range,\r\n        valueInputOption: 'USER_ENTERED',\r\n        resource: {\r\n          values: [values],\r\n        },\r\n      };\r\n\r\n      console.log('Enviando para Google Sheets:', request);\r\n      const response = await this.sheets.spreadsheets.values.append(request);\r\n      \r\n      console.log('Resposta do Google Sheets:', response.status, response.statusText);\r\n      \r\n      if (response.status === 200) {\r\n        console.log('✅ Dados adicionados com sucesso ao Google Sheets');\r\n        return true;\r\n      }\r\n      \r\n      console.error('❌ Falha ao adicionar dados - Status:', response.status);\r\n      return false;\r\n    } catch (error) {\r\n      console.error('❌ Erro ao adicionar dados ao Google Sheets:', error);\r\n      if (error instanceof Error && (error as any).response) {\r\n        console.error('Detalhes do erro:', (error as any).response.data);\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async addMultipleBetData(betDataArray: BetData[]): Promise<number> {\r\n    if (betDataArray.length === 0) return 0;\r\n    \r\n    try {\r\n      const values = betDataArray.map(bet => this.formatBetDataForSheets(bet));\r\n      \r\n      const request = {\r\n        spreadsheetId: this.config.spreadsheetId,\r\n        range: this.config.range,\r\n        valueInputOption: 'USER_ENTERED',\r\n        resource: {\r\n          values,\r\n        },\r\n      };\r\n\r\n      const response = await this.sheets.spreadsheets.values.append(request);\r\n      \r\n      if (response.status === 200) {\r\n        console.log(`${betDataArray.length} registros adicionados com sucesso`);\r\n        return betDataArray.length;\r\n      }\r\n      \r\n      return 0;\r\n    } catch (error) {\r\n      console.error('Erro ao adicionar múltiplos dados:', error);\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  private formatBetDataForSheets(betData: BetData): any[] {\r\n    // Formatação corrigida para a estrutura real da planilha\r\n    return [\r\n      betData.data instanceof Date \r\n        ? betData.data.toLocaleString('pt-BR') \r\n        : new Date(betData.data).toLocaleString('pt-BR'),    // A - Data\r\n      betData.jogo,                                         // B - Jogo\r\n      betData.placar || '0-0',                              // C - Placar (MUDANÇA: usar \"0-0\" como padrão)\r\n      betData.linha_da_aposta,                              // D - Linha_da_Aposta\r\n      betData.mercado,                                      // E - Mercado\r\n      typeof betData.odd_tipster === 'number' \r\n        ? betData.odd_tipster.toString() \r\n        : betData.odd_tipster,                              // F - Odd_Tipster\r\n      betData.pegou === true ? 'SIM' : \r\n      betData.pegou === false ? 'NÃO' : 'PENDENTE',        // G - Pegou\r\n      betData.odd_real ? betData.odd_real.toString() : '', // H - Odd_Real\r\n      '',                                                   // I - Resultado_Jogo (vazio inicialmente)\r\n      betData.resultado_aposta || 'Pendente',               // J - Resultado_Aposta\r\n    ];\r\n  }\r\n\r\n  async createHeaderRow(): Promise<boolean> {\r\n    try {\r\n      const headers = [\r\n        'Data',                  // A\r\n        'Jogo',                  // B\r\n        'Placar',                // C\r\n        'Linha_da_Aposta',       // D\r\n        'Mercado',               // E\r\n        'Odd_Tipster',           // F\r\n        'Pegou',                 // G\r\n        'Odd_Real',              // H\r\n        'Resultado_Jogo',        // I\r\n        'Resultado_Aposta'       // J\r\n      ];\r\n  \r\n      const request = {\r\n        spreadsheetId: this.config.spreadsheetId,\r\n        range: 'A1:J1',\r\n        valueInputOption: 'USER_ENTERED',\r\n        resource: {\r\n          values: [headers],\r\n        },\r\n      };\r\n  \r\n      const response = await this.sheets.spreadsheets.values.update(request);\r\n      console.log('Cabeçalho criado:', response.status === 200 ? 'Sucesso' : 'Falha');\r\n      return response.status === 200;\r\n    } catch (error) {\r\n      console.error('Erro ao criar cabeçalho:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async getSheetData(range?: string): Promise<any[]> {\r\n    try {\r\n      const response = await this.sheets.spreadsheets.values.get({\r\n        spreadsheetId: this.config.spreadsheetId,\r\n        range: range || this.config.range,\r\n      });\r\n\r\n      return response.data.values || [];\r\n    } catch (error) {\r\n      console.error('Erro ao buscar dados da planilha:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  // Método para testar a conexão\r\n  async testConnection(): Promise<boolean> {\r\n    try {\r\n      const response = await this.sheets.spreadsheets.get({\r\n        spreadsheetId: this.config.spreadsheetId\r\n      });\r\n      \r\n      console.log('✅ Conexão com Google Sheets OK:', response.data.properties.title);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('❌ Erro na conexão com Google Sheets:', error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default GoogleSheetsService;\r\nexport type { SheetsConfig };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 349, "column": 0}, "map": {"version":3,"sources":["file:///D:/Documentos/Trae/autosheets%20backup%202/src/lib/shared/bet-cache.ts"],"sourcesContent":["import fs from 'fs';\r\nimport path from 'path';\r\nimport { BetData } from '@/lib/telegram/parser';\r\n\r\nconst CACHE_FILE = path.join(process.cwd(), '.bet-cache.json');\r\n\r\n// CORREÇÃO: Definir interface para o cache\r\ninterface CacheData {\r\n  [key: string]: BetData;\r\n}\r\n\r\nexport class SharedBetCache {\r\n  static saveBet(key: string, betData: BetData) {\r\n    try {\r\n      // CORREÇÃO: Tipar explicitamente o cache\r\n      let cache: CacheData = {};\r\n      if (fs.existsSync(CACHE_FILE)) {\r\n        cache = JSON.parse(fs.readFileSync(CACHE_FILE, 'utf8')) as CacheData;\r\n      }\r\n      cache[key] = betData;\r\n      fs.writeFileSync(CACHE_FILE, JSON.stringify(cache, null, 2));\r\n      console.log(`💾 Aposta salva no cache: ${key}`);\r\n    } catch (error) {\r\n      console.error('Erro ao salvar no cache:', error);\r\n    }\r\n  }\r\n\r\n  static getBet(key: string): BetData | null {\r\n    try {\r\n      if (!fs.existsSync(CACHE_FILE)) return null;\r\n      // CORREÇÃO: Tipar explicitamente o cache\r\n      const cache: CacheData = JSON.parse(fs.readFileSync(CACHE_FILE, 'utf8')) as CacheData;\r\n      return cache[key] || null;\r\n    } catch (error) {\r\n      console.error('Erro ao ler cache:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static removeBet(key: string) {\r\n    try {\r\n      if (!fs.existsSync(CACHE_FILE)) return;\r\n      // CORREÇÃO: Tipar explicitamente o cache\r\n      const cache: CacheData = JSON.parse(fs.readFileSync(CACHE_FILE, 'utf8')) as CacheData;\r\n      delete cache[key];\r\n      fs.writeFileSync(CACHE_FILE, JSON.stringify(cache, null, 2));\r\n      console.log(`🗑️ Aposta removida do cache: ${key}`);\r\n    } catch (error) {\r\n      console.error('Erro ao remover do cache:', error);\r\n    }\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAGA,MAAM,aAAa,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;AAOrC,MAAM;IACX,OAAO,QAAQ,GAAW,EAAE,OAAgB,EAAE;QAC5C,IAAI;YACF,yCAAyC;YACzC,IAAI,QAAmB,CAAC;YACxB,IAAI,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,aAAa;gBAC7B,QAAQ,KAAK,KAAK,CAAC,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,YAAY;YACjD;YACA,KAAK,CAAC,IAAI,GAAG;YACb,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,YAAY,KAAK,SAAS,CAAC,OAAO,MAAM;YACzD,QAAQ,GAAG,CAAC,CAAC,0BAA0B,EAAE,KAAK;QAChD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;QAC5C;IACF;IAEA,OAAO,OAAO,GAAW,EAAkB;QACzC,IAAI;YACF,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,aAAa,OAAO;YACvC,yCAAyC;YACzC,MAAM,QAAmB,KAAK,KAAK,CAAC,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,YAAY;YAChE,OAAO,KAAK,CAAC,IAAI,IAAI;QACvB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sBAAsB;YACpC,OAAO;QACT;IACF;IAEA,OAAO,UAAU,GAAW,EAAE;QAC5B,IAAI;YACF,IAAI,CAAC,6FAAA,CAAA,UAAE,CAAC,UAAU,CAAC,aAAa;YAChC,yCAAyC;YACzC,MAAM,QAAmB,KAAK,KAAK,CAAC,6FAAA,CAAA,UAAE,CAAC,YAAY,CAAC,YAAY;YAChE,OAAO,KAAK,CAAC,IAAI;YACjB,6FAAA,CAAA,UAAE,CAAC,aAAa,CAAC,YAAY,KAAK,SAAS,CAAC,OAAO,MAAM;YACzD,QAAQ,GAAG,CAAC,CAAC,8BAA8B,EAAE,KAAK;QACpD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;AACF","debugId":null}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":["file:///D:/Documentos/Trae/autosheets%20backup%202/src/app/api/telegram/webhook/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\r\nimport GoogleSheetsService from '@/lib/sheets/service';\r\nimport { GeminiParser } from '@/lib/gemini/parser';\r\nimport { BetData } from '@/lib/telegram/parser';\r\n// NOVO: Import do GramJS monitor\r\nimport GramJSMonitor from '@/lib/telegram/gramjs-monitor';\r\nimport { SharedBetCache } from '@/lib/shared/bet-cache';\r\n\r\nconst sheetsConfig = {\r\n  spreadsheetId: process.env.GOOGLE_SHEETS_ID!,\r\n  range: 'Apostas!A:J',\r\n  credentials: {\r\n    client_email: process.env.GOOGLE_CLIENT_EMAIL!,\r\n    private_key: (process.env.GOOGLE_PRIVATE_KEY || '').replace(/\\\\n/g, '\\n'),\r\n  },\r\n};\r\n\r\nconst sheetsService = new GoogleSheetsService(sheetsConfig);\r\n\r\n// NOVO: Instância global do GramJS monitor\r\nlet gramjsMonitor: GramJSMonitor | null = null;\r\n\r\n// NOVO: Função para conectar ao monitor existente\r\nexport function setGramJSMonitor(monitor: GramJSMonitor) {\r\n  gramjsMonitor = monitor;\r\n  console.log('🔗 Monitor GramJS conectado ao webhook');\r\n}\r\n\r\nexport async function POST(request: Request) {\r\n  console.log('🔄 Webhook recebido');\r\n  \r\n  try {\r\n    const update = await request.json();\r\n    console.log('📦 Update recebido:', JSON.stringify(update, null, 2));\r\n    \r\n    // NOVO: Log detalhado\r\n    console.log('🔍 Tipo de update:', {\r\n      hasMessage: !!update.message,\r\n      hasText: !!update.message?.text,\r\n      hasReplyTo: !!update.message?.reply_to_message,\r\n      chatId: update.message?.chat?.id,\r\n      userId: update.message?.from?.id,\r\n      messageText: update.message?.text\r\n    });\r\n    \r\n    const message = update.message;\r\n    \r\n    // Processar apenas respostas às notificações do bot\r\n    if (update.message && update.message.text) {\r\n      const chatId = update.message.chat.id;\r\n      const userId = update.message.from.id;\r\n      const messageText = update.message.text;\r\n      \r\n      console.log(`📨 Mensagem de ${userId}: \"${messageText}\"`);\r\n      \r\n      // Verificar se é uma resposta a uma notificação do bot\r\n      // ...\r\n      // Na função POST, substitua a verificação do monitor:\r\n      if (message.reply_to_message) {\r\n        const repliedMessageId = message.reply_to_message.message_id;\r\n        const betKey = `${chatId}_${repliedMessageId}`;\r\n        \r\n        console.log(`🔍 Procurando aposta com chave: ${betKey}`);\r\n        \r\n        let betData = null;\r\n        \r\n        // Verificar primeiro no GramJS monitor (se disponível)\r\n        if (gramjsMonitor) {\r\n          betData = gramjsMonitor.getPendingBet(betKey);\r\n          console.log(`📋 Aposta encontrada no GramJS monitor: ${!!betData}`);\r\n        }\r\n        \r\n        // Se não encontrou no monitor, verificar no cache compartilhado\r\n        if (!betData) {\r\n          betData = SharedBetCache.getBet(betKey);\r\n          console.log(`📋 Aposta encontrada no cache compartilhado: ${!!betData}`);\r\n        }\r\n        \r\n        if (betData) {\r\n          console.log('💰 Processando resposta à notificação...');\r\n          await handleOddReply(update, betKey, betData);\r\n          \r\n          // Remover de ambos os caches\r\n          if (gramjsMonitor) {\r\n            gramjsMonitor.removePendingBet(betKey);\r\n          }\r\n          SharedBetCache.removeBet(betKey);\r\n          \r\n          return NextResponse.json({ ok: true, processed: true });\r\n        }\r\n      }\r\n      \r\n      console.log('ℹ️ Mensagem não relacionada a apostas pendentes');\r\n    }\r\n    \r\n    return NextResponse.json({ ok: true, processed: false });\r\n  } catch (error) {\r\n    console.error('❌ Erro no webhook:', error);\r\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\r\n  }\r\n}\r\n\r\n// Função para processar resposta da odd (mantém a mesma lógica)\r\nasync function handleOddReply(update: any, betKey: string, betData: BetData) {\r\n  const chatId = update.message.chat.id;\r\n  const messageText = update.message.text.trim();\r\n  \r\n  const oddReal = parseFloat(messageText.replace(',', '.'));\r\n  console.log(`📊 Odd recebida: ${messageText} -> ${oddReal}`);\r\n  \r\n  if (oddReal === 0) {\r\n    // Aposta não foi pega\r\n    betData.pegou = false;\r\n    betData.odd_real = null;\r\n    \r\n    const success = await sheetsService.addBetData(betData);\r\n    \r\n    await sendTelegramMessage(\r\n      chatId,\r\n      `❌ **Aposta não realizada**\\n\\n` +\r\n      `⚽ **Jogo:** ${betData.jogo}\\n` +\r\n      `⚽ **Placar:** ${betData.placar || '0-0'}\\n` +\r\n      `📊 **Mercado:** ${betData.mercado}\\n` +\r\n      `📈 **Linha:** ${betData.linha_da_aposta}\\n` +\r\n      `💰 **Odd Tipster:** ${betData.odd_tipster}\\n\\n` +\r\n      `Registrado que a aposta não foi pega.`\r\n    );\r\n    \r\n    console.log('❌ Aposta marcada como não realizada');\r\n  } else if (!isNaN(oddReal) && oddReal > 0) {\r\n    // Aposta foi pega com odd válida\r\n    betData.pegou = true;\r\n    betData.odd_real = oddReal;\r\n    \r\n    console.log('💾 Salvando aposta no Google Sheets:', betData);\r\n    \r\n    const success = await sheetsService.addBetData(betData);\r\n    \r\n    if (success) {\r\n      await sendTelegramMessage(\r\n        chatId,\r\n        `✅ **Aposta registrada com sucesso!**\\n\\n` +\r\n        `⚽ **Jogo:** ${betData.jogo}\\n` +\r\n        `⚽ **Placar:** ${betData.placar || '0-0'}\\n` +\r\n        `📊 **Mercado:** ${betData.mercado}\\n` +\r\n        `📈 **Linha:** ${betData.linha_da_aposta}\\n` +\r\n        `💰 **Odd Tipster:** ${betData.odd_tipster}\\n` +\r\n        `💎 **Odd Real:** ${betData.odd_real}\\n` +\r\n        `📊 **Status:** ${betData.resultado_aposta}`\r\n      );\r\n      \r\n      console.log('✅ Aposta salva com sucesso');\r\n    } else {\r\n      await sendTelegramMessage(\r\n        chatId,\r\n        `❌ **Erro ao salvar**\\n\\nHouve erro ao salvar no Google Sheets. Verifique os logs.`\r\n      );\r\n    }\r\n  } else {\r\n    // Odd inválida\r\n    await sendTelegramMessage(\r\n      chatId,\r\n      `❌ **Odd inválida**\\n\\nPor favor, responda com um número válido ou 0 para \\\"não peguei\\\".\\n\\nExemplos: 1.85, 2.50, 0`\r\n    );\r\n    return; // Não remove do cache\r\n  }\r\n  \r\n  // REMOVER: Esta linha estava causando o erro\r\n  // pendingBets.delete(betKey);\r\n}\r\n\r\nasync function sendTelegramMessage(chatId: number, text: string) {\r\n  const botToken = process.env.TELEGRAM_BOT_TOKEN!;\r\n  \r\n  try {\r\n    console.log(`Enviando mensagem para chat ${chatId}:`, text);\r\n    \r\n    const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        chat_id: chatId,\r\n        text: text,\r\n        parse_mode: 'Markdown'\r\n      })\r\n    });\r\n    \r\n    const result = await response.json();\r\n    \r\n    if (!response.ok) {\r\n      console.error('Erro na API do Telegram:', result);\r\n    } else {\r\n      console.log('Mensagem enviada com sucesso');\r\n    }\r\n    \r\n    return result;\r\n  } catch (error) {\r\n    console.error('Erro ao enviar mensagem:', error);\r\n  }\r\n}\r\n\r\nasync function getTelegramFileUrl(fileId: string): Promise<string> {\r\n  const response = await fetch(\r\n    `https://api.telegram.org/bot${process.env.TELEGRAM_BOT_TOKEN}/getFile?file_id=${fileId}`\r\n  );\r\n  const data = await response.json();\r\n  return `https://api.telegram.org/file/bot${process.env.TELEGRAM_BOT_TOKEN}/${data.result.file_path}`;\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}