version: '3.8'

services:
  # Traefik reverse proxy + Let's Encrypt
  traefik:
    image: traefik:v2.11
    container_name: autosheets_traefik
    restart: unless-stopped
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=autosheets_network
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --api.dashboard=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    networks:
      - autosheets_network
    labels:
      - traefik.enable=true
      - traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.http-catchall.entrypoints=web
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: autosheets_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: autosheets
      POSTGRES_PASSWORD: senha_postgres_forte_123
      POSTGRES_DB: autosheets
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data

    networks:
      - autosheets_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U autosheets -d autosheets"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - traefik.enable=false

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: autosheets_redis
    restart: unless-stopped
    command: redis-server --requirepass senha_redis_forte_456 --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - autosheets_network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "senha_redis_forte_456", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      - traefik.enable=false

  # Next.js Application
  autosheets:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: autosheets_app
    restart: unless-stopped
    env_file:
      - .env.production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - autosheets_network
    volumes:
      - ./backups:/app/backups
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    labels:
      - traefik.enable=false

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: autosheets_nginx
    restart: unless-stopped
    # ports removed; traffic goes through Traefik
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      autosheets:
        condition: service_healthy
    networks:
      - autosheets_network
    labels:
      - traefik.enable=true
      - traefik.http.routers.autosheets.rule=Host(`autosheets.loudigital.shop`)
      - traefik.http.routers.autosheets.entrypoints=websecure
      - traefik.http.routers.autosheets.tls.certresolver=letsencrypt
      - traefik.http.services.autosheets.loadbalancer.server.port=80

volumes:
  postgres_data:
  redis_data:
  nginx_logs:
  traefik_letsencrypt:

networks:
  autosheets_network:
    driver: bridge