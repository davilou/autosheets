#!/bin/bash

# Script para verificar se o monitor GramJS est√° funcionando em produ√ß√£o
# Execute este script no servidor via SSH

echo "üîç VERIFICA√á√ÉO DO MONITOR GRAMJS EM PRODU√á√ÉO"
echo "============================================"
echo ""

# Verificar se estamos no diret√≥rio correto
if [ ! -f "docker-compose.prod.yml" ]; then
    echo "‚ùå Erro: docker-compose.prod.yml n√£o encontrado"
    echo "   Certifique-se de estar no diret√≥rio correto do projeto"
    exit 1
fi

echo "üìÅ Diret√≥rio atual: $(pwd)"
echo ""

# 1. Verificar se o container est√° rodando
echo "üê≥ 1. STATUS DO CONTAINER AUTOSHEETS"
echo "-----------------------------------"
docker compose -f docker-compose.prod.yml ps autosheets
echo ""

# 2. Verificar se as vari√°veis do Telegram est√£o configuradas
echo "üîß 2. VARI√ÅVEIS DO TELEGRAM"
echo "---------------------------"
echo "Verificando vari√°veis essenciais para o monitor GramJS:"
docker compose -f docker-compose.prod.yml exec autosheets env | grep -E "TELEGRAM_(API_ID|API_HASH|SESSION_STRING|BOT_TOKEN)" | while read line; do
    var_name=$(echo $line | cut -d'=' -f1)
    var_value=$(echo $line | cut -d'=' -f2)
    if [ -n "$var_value" ]; then
        echo "‚úÖ $var_name: Configurado"
    else
        echo "‚ùå $var_name: VAZIO"
    fi
done
echo ""

# 3. Verificar se o monitor est√° sendo iniciado
echo "üöÄ 3. VERIFICANDO INICIALIZA√á√ÉO DO MONITOR"
echo "------------------------------------------"
echo "Verificando se o script start.sh est√° executando o monitor:"
docker compose -f docker-compose.prod.yml exec autosheets cat start.sh | grep -E "(monitor|TELEGRAM)"
echo ""

# 4. Verificar processos rodando no container
echo "‚öôÔ∏è  4. PROCESSOS RODANDO NO CONTAINER"
echo "------------------------------------"
echo "Verificando se o monitor GramJS est√° rodando:"
docker compose -f docker-compose.prod.yml exec autosheets ps aux | grep -E "(node|tsx|monitor)"
echo ""

# 5. Verificar logs espec√≠ficos do monitor
echo "üìã 5. LOGS DO MONITOR GRAMJS"
echo "----------------------------"
echo "√öltimos logs relacionados ao monitor GramJS:"
docker compose -f docker-compose.prod.yml logs autosheets --tail=50 | grep -E "(GramJS|Monitor|monitor|üöÄ|üì±|üîó)"
echo ""

# 6. Testar se o webhook est√° conectado ao monitor
echo "üîó 6. CONEX√ÉO WEBHOOK <-> MONITOR"
echo "---------------------------------"
echo "Verificando se o monitor est√° conectado ao webhook:"
docker compose -f docker-compose.prod.yml logs autosheets --tail=100 | grep -E "(setGramJSMonitor|Monitor.*conectado|webhook.*conectado)"
echo ""

# 7. Verificar se h√° erros relacionados ao monitor
echo "‚ùå 7. ERROS DO MONITOR"
echo "----------------------"
echo "Verificando erros relacionados ao monitor GramJS:"
docker compose -f docker-compose.prod.yml logs autosheets --tail=100 | grep -E "(erro|error|Error|‚ùå)" | grep -i -E "(gramjs|monitor|telegram)"
echo ""

# 8. Teste de conectividade do monitor
echo "üåê 8. TESTE DE CONECTIVIDADE"
echo "-----------------------------"
echo "Testando conectividade com a API do Telegram:"
docker compose -f docker-compose.prod.yml exec autosheets curl -s "https://api.telegram.org/bot$(docker compose -f docker-compose.prod.yml exec autosheets env | grep TELEGRAM_BOT_TOKEN | cut -d'=' -f2)/getMe" | head -c 100
echo ""
echo ""

# 9. Resumo e recomenda√ß√µes
echo "üìä 9. RESUMO E RECOMENDA√á√ïES"
echo "============================"
echo ""
echo "Para que o sistema de replies funcione, √© necess√°rio que:"
echo "‚úÖ 1. Container autosheets esteja rodando"
echo "‚úÖ 2. Vari√°veis TELEGRAM_* estejam configuradas"
echo "‚úÖ 3. Monitor GramJS seja iniciado pelo start.sh"
echo "‚úÖ 4. Monitor esteja conectado ao webhook"
echo "‚úÖ 5. N√£o haja erros na inicializa√ß√£o"
echo ""
echo "Se algum item acima falhar, execute:"
echo "   docker compose -f docker-compose.prod.yml restart autosheets"
echo ""
echo "Para monitorar em tempo real:"
echo "   docker compose -f docker-compose.prod.yml logs -f autosheets"
echo ""
echo "Para testar um reply:"
echo "   1. Envie uma mensagem de aposta em um grupo monitorado"
echo "   2. Aguarde a notifica√ß√£o privada do bot"
echo "   3. Responda √† notifica√ß√£o com uma odd"
echo "   4. Verifique os logs para confirmar o processamento"
echo ""