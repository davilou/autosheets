#!/bin/bash

# Script para diagnosticar e corrigir problemas do nginx
# Baseado na an√°lise dos logs que mostram nginx falhando continuamente

echo "üîß DIAGN√ìSTICO E CORRE√á√ÉO DO NGINX"
echo "==================================="
echo ""

echo "üìä 1. VERIFICANDO STATUS ATUAL DOS SERVI√áOS:"
echo "------------------------------------------"
docker compose -f docker-compose.prod.yml ps
echo ""

echo "üìã 2. LOGS DO NGINX (√∫ltimos 50 linhas):"
echo "---------------------------------------"
docker compose -f docker-compose.prod.yml logs nginx --tail=50
echo ""

echo "‚öôÔ∏è 3. VERIFICANDO CONFIGURA√á√ÉO DO NGINX:"
echo "---------------------------------------"
echo "Testando configura√ß√£o..."
docker compose -f docker-compose.prod.yml exec nginx nginx -t 2>/dev/null || echo "‚ùå Configura√ß√£o inv√°lida"
echo ""

echo "üìÅ 4. VERIFICANDO ARQUIVO DE CONFIGURA√á√ÉO:"
echo "-----------------------------------------"
echo "Conte√∫do do nginx.conf:"
docker compose -f docker-compose.prod.yml exec nginx cat /etc/nginx/nginx.conf 2>/dev/null || echo "‚ùå N√£o foi poss√≠vel ler configura√ß√£o"
echo ""

echo "üåê 5. TESTANDO CONECTIVIDADE INTERNA:"
echo "------------------------------------"
echo "Testando se a aplica√ß√£o responde na porta 3000..."
docker compose -f docker-compose.prod.yml exec nginx curl -I http://autosheets:3000/api/telegram/webhook 2>/dev/null || echo "‚ùå Aplica√ß√£o n√£o responde"
echo ""

echo "üîÑ 6. REINICIANDO NGINX:"
echo "-----------------------"
echo "Parando nginx..."
docker compose -f docker-compose.prod.yml stop nginx
echo "Aguardando 3 segundos..."
sleep 3
echo "Iniciando nginx..."
docker compose -f docker-compose.prod.yml start nginx
echo "Aguardando 5 segundos para estabilizar..."
sleep 5
echo ""

echo "‚úÖ 7. VERIFICANDO STATUS AP√ìS REIN√çCIO:"
echo "--------------------------------------"
docker compose -f docker-compose.prod.yml ps nginx
echo ""

echo "üß™ 8. TESTANDO WEBHOOK AP√ìS CORRE√á√ÉO:"
echo "------------------------------------"
echo "Testando webhook externamente..."
WEBHOOK_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" https://autosheets.loudigital.shop/api/telegram/webhook || echo "000")
echo "C√≥digo de resposta: $WEBHOOK_RESPONSE"

if [ "$WEBHOOK_RESPONSE" = "200" ] || [ "$WEBHOOK_RESPONSE" = "405" ]; then
    echo "‚úÖ Webhook respondendo corretamente!"
else
    echo "‚ùå Webhook ainda n√£o responde (c√≥digo: $WEBHOOK_RESPONSE)"
fi
echo ""

echo "üîç 9. DIAGN√ìSTICO ADICIONAL (se ainda houver problemas):"
echo "-------------------------------------------------------"
if [ "$WEBHOOK_RESPONSE" != "200" ] && [ "$WEBHOOK_RESPONSE" != "405" ]; then
    echo "Verificando portas da aplica√ß√£o..."
    docker compose -f docker-compose.prod.yml exec autosheets netstat -tlnp 2>/dev/null || echo "‚ùå N√£o foi poss√≠vel verificar portas"
    echo ""
    
    echo "Verificando se o processo Next.js est√° rodando..."
    docker compose -f docker-compose.prod.yml exec autosheets ps aux | grep next 2>/dev/null || echo "‚ùå Processo Next.js n√£o encontrado"
    echo ""
    
    echo "Testando conectividade direta com a aplica√ß√£o..."
    docker compose -f docker-compose.prod.yml exec autosheets curl -I http://localhost:3000/api/telegram/webhook 2>/dev/null || echo "‚ùå Aplica√ß√£o n√£o responde localmente"
fi
echo ""

echo "üìã 10. RESUMO DO DIAGN√ìSTICO:"
echo "============================"
echo "Status do nginx: $(docker compose -f docker-compose.prod.yml ps nginx --format 'table {{.State}}')"
echo "Webhook responde: $WEBHOOK_RESPONSE"
echo ""

echo "üéØ PR√ìXIMOS PASSOS:"
echo "=================="
if [ "$WEBHOOK_RESPONSE" = "200" ] || [ "$WEBHOOK_RESPONSE" = "405" ]; then
    echo "‚úÖ Nginx corrigido! Agora voc√™ pode:"
    echo "1. Testar o sistema de replies manualmente"
    echo "2. Executar: ./scripts/testar-webhook-manual.sh"
    echo "3. Fazer um reply real no Telegram para validar"
else
    echo "‚ùå Nginx ainda com problemas. Verifique:"
    echo "1. Configura√ß√£o do nginx.conf"
    echo "2. Se a aplica√ß√£o est√° rodando na porta 3000"
    echo "3. Logs detalhados: docker compose -f docker-compose.prod.yml logs nginx"
    echo "4. Considere recriar os containers: docker compose -f docker-compose.prod.yml up -d --force-recreate"
fi
echo ""

echo "üîß COMANDOS DE EMERG√äNCIA:"
echo "========================="
echo "# Recriar todos os containers:"
echo "docker compose -f docker-compose.prod.yml down && docker compose -f docker-compose.prod.yml up -d"
echo ""
echo "# Verificar logs em tempo real:"
echo "docker compose -f docker-compose.prod.yml logs -f nginx"
echo ""
echo "# Acessar container do nginx:"
echo "docker compose -f docker-compose.prod.yml exec nginx sh"
echo ""