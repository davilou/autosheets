#!/bin/bash

# Script para testar o processamento de replies em produ√ß√£o
# Execute este script no servidor via SSH

echo "üß™ TESTE DE PROCESSAMENTO DE REPLIES - PRODU√á√ÉO"
echo "==============================================="
echo ""

# Verificar se estamos no diret√≥rio correto
if [ ! -f "docker-compose.prod.yml" ]; then
    echo "‚ùå Erro: docker-compose.prod.yml n√£o encontrado"
    echo "   Certifique-se de estar no diret√≥rio correto do projeto"
    exit 1
fi

# Fun√ß√£o para simular um reply
testar_reply() {
    local user_id="670237902"
    local replied_message_id="123"
    local odd_value="1.85"
    
    echo "üéØ Simulando reply com:"
    echo "   - User ID: $user_id"
    echo "   - Replied Message ID: $replied_message_id"
    echo "   - Odd: $odd_value"
    echo ""
    
    # Payload do teste
    local payload='{
        "message": {
            "message_id": 456,
            "from": {
                "id": '"$user_id"',
                "first_name": "Teste"
            },
            "chat": {
                "id": '"$user_id"',
                "type": "private"
            },
            "text": "'"$odd_value"'",
            "reply_to_message": {
                "message_id": '"$replied_message_id"'
            }
        }
    }'
    
    echo "üì§ Enviando payload de teste para o webhook..."
    
    # Testar o webhook
    response=$(curl -s -w "\nHTTP_CODE:%{http_code}" -X POST \
        "https://autosheets.loudigital.shop/api/telegram/webhook" \
        -H "Content-Type: application/json" \
        -d "$payload")
    
    echo "üì• Resposta do webhook:"
    echo "$response"
    echo ""
    
    # Extrair c√≥digo HTTP
    http_code=$(echo "$response" | grep "HTTP_CODE:" | cut -d: -f2)
    
    if [ "$http_code" = "200" ]; then
        echo "‚úÖ Webhook respondeu com sucesso (200)"
    else
        echo "‚ùå Webhook retornou c√≥digo: $http_code"
    fi
    
    echo ""
}

# Fun√ß√£o para monitorar logs em tempo real
monitorar_logs() {
    echo "üìã Monitorando logs em tempo real..."
    echo "   (Pressione Ctrl+C para parar)"
    echo ""
    
    # Monitorar logs filtrados
    docker compose -f docker-compose.prod.yml logs -f autosheets | grep -E "(reply|betKey|processamento|Debug|üîç|üí∞|‚ùå|‚úÖ)"
}

# Menu principal
echo "Escolha uma op√ß√£o:"
echo "1) Testar reply simulado"
echo "2) Monitorar logs em tempo real"
echo "3) Verificar status do sistema"
echo "4) Executar teste completo"
echo ""
read -p "Digite sua op√ß√£o (1-4): " opcao

case $opcao in
    1)
        echo ""
        testar_reply
        ;;
    2)
        echo ""
        monitorar_logs
        ;;
    3)
        echo ""
        echo "üîç Verificando status do sistema..."
        docker compose -f docker-compose.prod.yml ps
        echo ""
        echo "üìã √öltimos logs (√∫ltimas 20 linhas):"
        docker compose -f docker-compose.prod.yml logs autosheets --tail=20
        ;;
    4)
        echo ""
        echo "üß™ EXECUTANDO TESTE COMPLETO"
        echo "============================="
        echo ""
        
        echo "1Ô∏è‚É£ Verificando status do container..."
        docker compose -f docker-compose.prod.yml ps autosheets
        echo ""
        
        echo "2Ô∏è‚É£ Verificando se o monitor est√° rodando..."
        docker compose -f docker-compose.prod.yml exec autosheets ps aux | grep -E "(tsx|monitor)" || echo "‚ùå Monitor n√£o encontrado"
        echo ""
        
        echo "3Ô∏è‚É£ Testando webhook..."
        testar_reply
        
        echo "4Ô∏è‚É£ Verificando logs ap√≥s o teste..."
        echo "   (Aguardando 3 segundos para processar...)"
        sleep 3
        docker compose -f docker-compose.prod.yml logs autosheets --tail=10 | grep -E "(reply|betKey|Debug|processamento)"
        echo ""
        
        echo "5Ô∏è‚É£ Resumo do teste:"
        echo "   - Se voc√™ viu logs com 'Debug da chave' ou 'processamento', o sistema est√° funcionando"
        echo "   - Se n√£o viu logs, o monitor pode n√£o estar rodando ou conectado"
        echo "   - Para resolver, execute: docker compose -f docker-compose.prod.yml restart autosheets"
        ;;
    *)
        echo "‚ùå Op√ß√£o inv√°lida"
        exit 1
        ;;
esac

echo ""
echo "‚úÖ Teste conclu√≠do!"
echo "Para mais informa√ß√µes, execute: ./scripts/verificar-monitor-producao.sh"